---
name: 'CI'
on:
  push: {}

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  NX_NO_CLOUD: ${{ vars.NX_NO_CLOUD }}
  GITHUB_ACTIONS: true

jobs:
  pnpm-install:
    name: Install (and cache) dependencies
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup PNPM package manager
        uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: 'pnpm'

      - name: Install npm dependencies
        run: pnpm install

  lint:
    name: Lint Code
    runs-on: ubuntu-24.04
    needs: pnpm-install
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup main branch for reference
        if: ${{ github.ref_name != 'main' }}
        run: git branch --track main origin/main

      - name: Setup NX
        uses: nrwl/nx-set-shas@v3

      - name: Setup PNPM package manager
        uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: 'pnpm'

      - name: Setup the BEAM and Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: '26.2.5.6'
          elixir-version: '1.17.3'

      - name: Install node dependencies
        run: pnpm install

      - name: Lint
        run: pnpm nx affected -t lint

      - name: Typecheck
        run: pnpm nx affected -t typecheck

  tests:
    name: Run tests
    runs-on: ubuntu-24.04
    needs: pnpm-install
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        options: >-
          -e POSTGRES_USER=lotta
          -e POSTGRES_PASSWORD=lotta
      redis:
        image: bitnami/redis:latest
        ports:
          - 6379:6379
        options: >-
          -e REDIS_PASSWORD=lotta
      minio:
        image: lazybit/minio
        ports:
          - 9000:9000
        env:
          MINIO_ACCESS_KEY: AKIAIOSFODNN7EXAMPLE
          MINIO_SECRET_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
        options: >-
          --name minio
          --health-cmd "curl http://localhost:9000/minio/health/live"
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup main branch for reference
        if: ${{ github.ref_name != 'main' }}
        run: git branch --track main origin/main

      - name: Setup NX
        uses: nrwl/nx-set-shas@v3

      - name: Setup PNPM package manager
        uses: pnpm/action-setup@v3
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: 'pnpm'

      - uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Setup the BEAM and Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: '26.2.5.6'
          elixir-version: '1.17.3'

      - uses: hostwithquantum/setup-mc@main
        with:
          alias-name: minio
          alias-url: http://localhost:9000
          alias-access-key: AKIAIOSFODNN7EXAMPLE
          alias-secret-key: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

      - run: |
          mc mb minio/lotta-dev-ugc
          mc anonymous set download minio/lotta-dev-ugc

      - name: Install npm dependencies
        run: pnpm install

      - name: Compile Elixir
        run: mix loadpaths
        env:
          MIX_ENV: test

      - name: Run Unit / Component tests
        run: pnpm nx affected -t test --configuration=coverage
        env:
          NODE_ENV: test
          MIX_ENV: test

      # - name: Run end-to-end tests
      #   run: |
      #     pnpm exec playwright install --with-deps chromium
      #     pnpm nx affected -t e2e --configuration=ci

      - name: Upload Tests for storybook-addon-theme
        uses: codecov/codecov-action@v5
        if: ${{ !cancelled() }}
        with:
          directory: libs/storybook-addon-theme/coverage/
          flags: storybook-addon-theme
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

      - name: Upload Tests for hubert
        uses: codecov/codecov-action@v5
        if: ${{ !cancelled() }}
        with:
          directory: libs/hubert/coverage/
          flags: hubert
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

      - name: Upload Tests for Webapp
        uses: codecov/codecov-action@v5
        if: ${{ !cancelled() }}
        with:
          directory: apps/webapp/coverage/
          flags: webapp
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

      - name: Upload Tests for CoreApi
        uses: codecov/codecov-action@v5
        if: ${{ !cancelled() }}
        with:
          directory: apps/core-api/cover/
          flags: core-api
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  check-build:
    # We do not need to check the build for environments that are
    # to be deployed to a preview (or staging) environment shortly
    # TODO: The pull request check is now Quark, as it is not pupulated
    # with the labels. Maybe github-api can be used to get the labels?
    name: Check the projects build
    runs-on: ubuntu-24.04
    needs: pnpm-install
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        if: ${{ github.ref_name != 'main' && !contains(github.event.pull_request.labels.*.name, 'preview') }}

      - name: Setup main branch for reference
        if: ${{ github.ref_name != 'main' && !contains(github.event.pull_request.labels.*.name, 'preview') }}
        run: git branch --track main origin/main

      - name: Setup NX
        uses: nrwl/nx-set-shas@v3
        if: ${{ github.ref_name != 'main' && !contains(github.event.pull_request.labels.*.name, 'preview') }}

      - name: Setup PNPM package manager
        uses: pnpm/action-setup@v3
        if: ${{ github.ref_name != 'main' && !contains(github.event.pull_request.labels.*.name, 'preview') }}
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        if: ${{ github.ref_name != 'main' && !contains(github.event.pull_request.labels.*.name, 'preview') }}
        with:
          node-version: 23
          cache: 'pnpm'

      - name: Setup the BEAM and Elixir
        if: ${{ github.ref_name != 'main' && !contains(github.event.pull_request.labels.*.name, 'preview') }}
        uses: erlef/setup-beam@v1
        with:
          otp-version: '26.2.5.6'
          elixir-version: '1.17.3'

      - name: Install npm dependencies
        if: ${{ github.ref_name != 'main' && !contains(github.event.pull_request.labels.*.name, 'preview') }}
        run: pnpm install

      - name: Run build task
        if: ${{ github.ref_name != 'main' && !contains(github.event.pull_request.labels.*.name, 'preview') }}
        run: pnpm nx affected -t build
