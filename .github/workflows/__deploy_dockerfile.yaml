---
name: 'Deploy Dockerfile'

on:
  workflow_call:
    inputs:
      name:
        description: The image name. Defaults to the name of the repository
        type: string
        required: false
        default: ${{ github.repository }}
      tags:
        description: |
          A stringified json string array of tags to be given to
          the image. For example '["latest"]' or '["latest", "1.0.0"]'
          Defaults to '["$\{\{ github.sha \}\}"]'
        type: string
        required: false
        default: '["${{ github.sha }}"]'
      checkout-ref:
        description: Ref to checkout the repository at
        type: string
        required: false
      registry:
        description: The docker registry to use. Defaults to ghcr.io
        type: string
        required: false
        default: ghcr.io
      working-directory:
        description: The directory that will be used as build context for the docker build
        type: string
        required: false
        default: '.'
      dockerfile:
        type: string
        required: false
    secrets:
      username:
        description: |
          The username to use. Defaults to $\{\{ github.actor \}\}
        required: false
      password:
        required: true
      sentry_auth_token:
        required: false
        description: |
          The sentry auth token to use for the build. This is required
          if you want to upload sourcemaps to sentry

jobs:
  build-image:
    name: 'Build image from Dockerfile'
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: '${{ inputs.registry }}/${{ inputs.name }}'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
          ref: ${{ inputs.checkout-ref }}

      - name: Build docker image
        id: build
        run: |
          tag=$(echo "${{ fromJSON(inputs.tags)[0] }}")
          base_image=$IMAGE_NAME:$tag
          sentry_auth_token=${{ secrets.sentry_auth_token || '' }}
          docker build \
            --build-arg IMAGE_NAME \
            --build-arg RELEASE_NAME="$tag" \
            --secret id=sentry_auth_token \
            -f ${{ inputs.dockerfile || 'Dockerfile' }} \
            -t $base_image \
            ${{ inputs.working-directory }}
          echo "base-image=$base_image" >> $GITHUB_OUTPUT
          echo "Base image $base_image written to github output"

      - name: docker login
        uses: docker/login-action@v1.10.0
        with:
          registry: ${{ inputs.registry }}
          username: ${{ secrets.username || github.actor }}
          password: ${{ secrets.password }}
          working-directory: ${{ inputs.working-directory }}

      - name: push image to registry
        run: |
          secondaryTags=$(echo '${{ inputs.tags }}' | jq -r '.[1:][]')

          docker push ${{ steps.build.outputs.base-image }}
          for tag in $secondaryTags
          do
            docker tag ${{ steps.build.outputs.base-image }} $IMAGE_NAME:$tag
            docker push $IMAGE_NAME:$tag
          done
