---
name: Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest

    name: Setup Elixir
    steps:
      - uses: actions/checkout@v3

      - uses: erlef/setup-beam@v1
        with:
          otp-version: "25.2"
          elixir-version: "1.14.2"

      - name: Install Dependencies
        run: mix deps.get

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.sha }}-mix_deps
          path: deps
          retention-days: 1

  test:
    runs-on: ubuntu-latest
    needs: ["setup"]

    services:
      postgres:
        image: postgres:latest
        options: >-
          -e POSTGRES_USER=lotta
          -e POSTGRES_PASSWORD=lotta
      rabbitmq:
        image: rabbitmq:latest
      redis:
        image: bitnami/redis:latest
        options: >-
          -e REDIS_PASSWORD=lotta
      minio:
        image: bitnami/minio:latest
        options: >-
          -e MINIO_SERVER_ACCESS_KEY="AKIAIOSFODNN7EXAMPLE"
          -e MINIO_SERVER_SECRET_KEY="wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
          -e MINIO_DEFAULT_BUCKETS="lotta-dev-ugc"
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
        options: >-
          -e discovery.type=single-node
          -e xpack.security.enabled=false

    steps:
      - uses: actions/checkout@v3

      - uses: erlef/setup-beam@v1
        with:
          otp-version: "25.2"
          elixir-version: "1.14.2"

      - name: actions/download-artifact@v3
        with:
          name: ${{ github.sha }}-mix_deps

      - name: Download test dependencies
        run: mix deps.get --only test
        with:
          name: ${{ github.sha }}-mix_deps

      - name: Run tests
        run: mix test --cover
        env:
          MIX_ENV: test

      - name: Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: _build/test/lib/lotta
          # fail_ci_if_error: true

  compile:
    name: Make sure it compiles
    runs-on: ubuntu-latest
    needs: ["setup"]

    steps:
      - uses: actions/checkout@v3

      - uses: erlef/setup-beam@v1
        name: Setup Elixir
        with:
          otp-version: "25.2"
          elixir-version: "1.14.2"

      - name: compile
        run: mix compile --warnings-as-errors --force

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.sha }}-build_output
          path: _build
          retention-days: 1

  codeQL:
    runs-on: ubuntu-latest
    needs: ["compile"]

    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: elixir

      - name: Install Dependencies
        run: npm ci

      - uses: actions/download-artifact@v3
        with:
          name: ${{ github.sha }}-mix_deps

      - uses: actions/download-artifact@v3
        with:
          name: ${{ github.sha }}-build_output

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
