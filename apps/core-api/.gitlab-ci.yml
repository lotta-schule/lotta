stages:
  - test
  - build

variables:
  # set docker host to connect to docker in kubernetes
  # DOCKER_HOST: tcp://localhost:2375/
  # DOCKER_DRIVER: overlay2
  # TODO: Set correct certs dir to /certs according to this article: https://about.gitlab.com/2019/07/31/docker-in-docker-with-docker-19-dot-03/
  DOCKER_TLS_CERTDIR: "/certs"
  MINIO_ROOT_USER: AKIAIOSFODNN7EXAMPLE
  MINIO_ROOT_PASSWORD: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

cache:
  key: "lotta-api-deps"
  paths:
    - deps/

services:
  - name: postgres:latest
  - name: rabbitmq:latest
  - name: bitnami/redis:latest
    alias: redis
  - name: minio/minio:latest
    alias: minio
    entrypoint: ['sh']
    command: ['-c', 'mkdir -p /export/lotta-dev-ugc && /usr/bin/minio server /export']
  - name: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
    alias: elasticsearch
    command:
      - "bin/elasticsearch"
      - "-Ediscovery.type=single-node"
      - "-Expack.security.enabled=false"

test:
  stage: test
  image: elixir:1.11.2
  variables:
    MIX_ENV: test
    POSTGRES_PASSWORD: lotta
    POSTGRES_USER: lotta
    POSTGRES_DB: api_test
    REDIS_PASSWORD: lotta
    UGC_S3_COMPAT_ACCESS_KEY_ID: "${S3COMPAT_ACCESS_KEY_ID}"
    UGC_S3_COMPAT_SECRET_ACCESS_KEY: "${S3COMPAT_SECRET_ACCESS_KEY}"
    UGC_S3_COMPAT_ENDPOINT: mp4-dev-ugc.fra1.digitaloceanspaces.com
    UGC_S3_COMPAT_BUCKET: mp4-dev-ugc
  before_script:
    - mix local.hex --force
    - mix local.rebar --force
    - mix deps.get
  script:
    # gitlab k8s-runner has a problem with service hostname exposition
    # https://gitlab.com/gitlab-org/gitlab-runner/issues/2229
    - make tests-ci
  artifacts:
    when: always
    paths:
      - _build/test/lib/api/test-junit-report.xml
    reports:
      junit: _build/test/lib/api/test-junit-report.xml
  coverage: '/\[TOTAL\]\s+(\d+\.\d+%)$/'

build docker image:production:
  stage: build
  environment:
    name: production
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"https://index.docker.io/v1/\":{\"auth\":\"$(echo -n "$DOCKER_HUB_USER:$DOCKER_HUB_PASSWORD" | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination lotta/api:$CI_COMMIT_TAG --destination lotta/api:stable --destination lotta/api:latest;
  only:
    - tags

build docker image:staging:
  stage: build
  environment:
    name: staging
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}, \"https://index.docker.io/v1/\":{\"auth\":\"$(echo -n "$DOCKER_HUB_USER:$DOCKER_HUB_PASSWORD" | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --destination lotta/api:canary;
  only:
    refs:
      - develop

pages:
  stage: build
  environment:
    name: production
  image: elixir:1.11.2
  before_script:
    - mix local.hex --force
    - mix local.rebar --force
    - mix deps.get
  script:
    - mix docs
    - mv doc public
  artifacts:
    paths:
      - "public"
  only:
    refs:
      - develop
