stages:
  - test
  - build
  - deploy

variables:
  # set docker host to connect to docker in kubernetes
  # DOCKER_HOST: tcp://localhost:2375/
  # DOCKER_DRIVER: overlay2
  # TODO: Set correct certs dir to /certs according to this article: https://about.gitlab.com/2019/07/31/docker-in-docker-with-docker-19-dot-03/
  DOCKER_TLS_CERTDIR: "/certs"

cache:
  key: "lotta-web-node-modules"
  paths:
    - node_modules/

test:
  stage: test
  image: node:14
  script:
    - npm install
    - npm run test:ci -- --coverage
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'

lint:
  stage: test
  image: node:14
  script:
    - npm install
    - npm run lint -- --max-warnings=0


build docker image:review:
  image: docker:19.03.0
  services:
    - docker:19.03.0-dind
  stage: build
  environment:
    name: review/$CI_COMMIT_REF_NAME
  script:
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USER" --password-stdin
    - docker build -t lotta/web:$CI_COMMIT_SHA
      --build-arg APP_ENVIRONMENT=review/$CI_COMMIT_REF_NAME
      --build-arg APP_REVISION=$CI_COMMIT_SHA
      --build-arg APP_BASE_DOMAIN=.$CI_ENVIRONMENT_SLUG.lotta.schule
      --build-arg API_URL
      --build-arg AUTHENTICATION_TOKEN_NAME
      --build-arg CLOUDIMG_TOKEN
      --build-arg SENTRY_DSN
      --build-arg MATOMO_URL=""
      --build-arg MATOMO_SITEID=""
      --build-arg FILE_REPLACEMENT_URL="" .
    - docker tag lotta/web:$CI_COMMIT_SHA lotta/web:$CI_ENVIRONMENT_SLUG
    - docker push lotta/web
  except:
    refs:
      - develop
      - master

deploy:review:
  stage: deploy
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://ehrenberg.$CI_ENVIRONMENT_SLUG.lotta.schule
    on_stop: stop_review_app
  image:
    name: lotta/do-helm-deploy:latest
  script:
    - /user/local/bin/setup.sh
    - helm repo add lotta https://medienportal.gitlab.io/helm-charts
    - helm repo update
    - kubectl create ns lotta-$CI_ENVIRONMENT_SLUG || true
    - helm upgrade --install lotta-web lotta/lotta-web
      --namespace lotta-$CI_ENVIRONMENT_SLUG --wait
      --set image.tag=${CI_COMMIT_SHA}
      --set replicaCount=1
      --set ingress.enabled=true
      --set-string ingress.annotations."kubernetes\.io/ingress\.class"="nginx"
      --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/configuration-snippet"="proxy_set_header l5d-dst-override \\\$service_name.\\\$namespace.svc.cluster.local:\\\$service_port;grpc_set_header l5d-dst-override \\\$service_name.\\\$namespace.svc.cluster.local:\\\$service_port;"
      --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/server-snippet"="location ~ /lotta-ugc-staging { proxy_pass https://lotta-ugc-staging.fra1.digitaloceanspaces.com; }"
      --set-string ingress.annotations."cert-manager\.io/cluster-issuer"="letsencrypt-production"
      --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/ssl-redirect"="true"
      --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/http2-push-preload"="true"
      --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/proxy-body-size"="250M"
      --set ingress.hosts[0].host="*.$CI_ENVIRONMENT_SLUG.lotta.schule"
      --set ingress.hosts[0].paths[0]=/
      --set ingress.tls[0].hosts[0]="*.$CI_ENVIRONMENT_SLUG.lotta.schule"
      --set ingress.tls[0].secretName="$CI_ENVIRONMENT_SLUG-web-tls-cert"
      --set resources.limits.cpu=50m
      --set resources.limits.memory=32Mi
      --set resources.requests.cpu=50m
      --set resources.requests.memory=32Mi
  except:
    refs:
      - develop
      - master

stop_review_app:
  stage: deploy
  image:
    name: lotta/do-helm-deploy:latest
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  variables:
    GIT_STRATEGY: none
  when: manual
  script:
    - /user/local/bin/setup.sh
    - helm uninstall -n lotta-$CI_ENVIRONMENT_SLUG lotta-web
    - kubectl delete ns lotta-$CI_ENVIRONMENT_SLUG
  except:
    refs:
      - develop
      - master





build docker image:staging:
  image: docker:19.03.0
  services:
    - docker:19.03.0-dind
  stage: build
  environment:
    name: staging
  script:
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USER" --password-stdin
    - docker build -t lotta/web:$CI_COMMIT_SHA
      --build-arg APP_ENVIRONMENT=staging
      --build-arg APP_REVISION=$CI_COMMIT_SHA
      --build-arg APP_BASE_DOMAIN
      --build-arg API_URL
      --build-arg CLOUDIMG_TOKEN
      --build-arg SENTRY_DSN
      --build-arg FILE_REPLACEMENT_URL .
    - docker tag lotta/web:$CI_COMMIT_SHA lotta/web:staging
    - docker push lotta/web
  only:
    refs:
      - develop

deploy:staging:
  stage: deploy
  environment:
    name: staging
    url: https://ehrenberg.staging.lotta.schule
  image:
    name: lotta/do-helm-deploy:latest
  script:
    - /user/local/bin/setup.sh
    - curl "https://sentry.io/api/0/organizations/$SENTRY_ORGANIZATION_SLUG/releases/" -X POST -X POST -H "Authorization:Bearer $SENTRY_API_TOKEN" -H 'Content-Type:application/json' -d "{ \"version\":\"web-$CI_COMMIT_SHA\", \"refs\":[{ \"repository\":\"$CI_PROJECT_URL\", \"commit\":\"$CI_COMMIT_SHA\", \"previousCommit\":\"$CI_COMMIT_BEFORE_SHA\" }], \"projects\":[\"web\"] }"
    - helm repo add lotta https://medienportal.gitlab.io/helm-charts
    - helm repo update
    - helm upgrade --install lotta-web lotta/lotta-web
      --namespace lotta-staging --wait
      --set image.tag=${CI_COMMIT_SHA}
      --set replicaCount=1
      --set ingress.enabled=true
      --set-string ingress.annotations."kubernetes\.io/ingress\.class"="nginx"
      --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/configuration-snippet"="proxy_set_header l5d-dst-override \\\$service_name.\\\$namespace.svc.cluster.local:\\\$service_port;grpc_set_header l5d-dst-override \\\$service_name.\\\$namespace.svc.cluster.local:\\\$service_port;"
      --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/server-snippet"="location ~ /lotta-ugc-staging { proxy_pass https://lotta-ugc-staging.fra1.digitaloceanspaces.com; }"
      --set-string ingress.annotations."cert-manager\.io/cluster-issuer"="letsencrypt-production"
      --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/ssl-redirect"="true"
      --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/http2-push-preload"="true"
      --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/proxy-body-size"="1500M"
      --set ingress.hosts[0].host="*.staging.lotta.schule"
      --set ingress.tls[0].hosts[0]="*.staging.lotta.schule"
      --set ingress.tls[0].secretName="lotta-web-staging-certificate"
      --set resources.limits.cpu=50m
      --set resources.limits.memory=32Mi
      --set resources.requests.cpu=50m
      --set resources.requests.memory=32Mi
    - curl "https://sentry.io/api/0/organizations/$SENTRY_ORGANIZATION_SLUG/releases/web-$CI_COMMIT_SHA/deploys/" -X POST -X POST -H 'Content-Type:application/json' -H "Authorization:Bearer $SENTRY_API_TOKEN" -d '{"environment":"staging"}'
  only:
    refs:
      - develop

build docker image:production:
  image: docker:19.03.0
  services:
    - docker:19.03.0-dind
  stage: build
  environment:
    name: production
  script:
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USER" --password-stdin
    - docker build -t lotta/web:$CI_COMMIT_SHA
      --build-arg APP_ENVIRONMENT=production
      --build-arg APP_REVISION=$CI_COMMIT_SHA
      --build-arg APP_BASE_DOMAIN
      --build-arg API_URL
      --build-arg CLOUDIMG_TOKEN
      --build-arg SENTRY_DSN
      --build-arg FILE_REPLACEMENT_URL .
    - docker tag lotta/web:$CI_COMMIT_SHA lotta/web:production
    - docker push lotta/web
    - curl "https://sentry.io/api/0/organizations/$SENTRY_ORGANIZATION_SLUG/releases/" -X POST -X POST -H "Authorization:Bearer $SENTRY_API_TOKEN" -H 'Content-Type:application/json' -d "{ \"version\":\"web-$CI_COMMIT_SHA\", \"refs\":[{ \"repository\":\"$CI_PROJECT_URL\", \"commit\":\"$CI_COMMIT_SHA\", \"previousCommit\":\"$CI_COMMIT_BEFORE_SHA\" }], \"projects\":[\"web\"] }"
  only:
    refs:
      - master

deploy:production:
  stage: deploy
  environment:
    name: production
    url: https://ehrenberg.lotta.schule
  image:
    name: lotta/do-helm-deploy:latest
  script:
    - /user/local/bin/setup.sh
    - helm repo add lotta https://medienportal.gitlab.io/helm-charts
    - helm repo update
    - helm upgrade --install lotta-web lotta/lotta-web
      --namespace lotta --wait
      --set image.tag=${CI_COMMIT_SHA}
      --set replicaCount=2
      --set ingress.enabled=true
      --set-string ingress.annotations."kubernetes\.io/ingress\.class"="nginx"
      --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/configuration-snippet"="proxy_set_header l5d-dst-override \\\$service_name.\\\$namespace.svc.cluster.local:\\\$service_port;grpc_set_header l5d-dst-override \\\$service_name.\\\$namespace.svc.cluster.local:\\\$service_port;"
      --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/server-snippet"="location ~ /ugc { proxy_pass https://ugc.fra1.digitaloceanspaces.com; }"
      --set-string ingress.annotations."cert-manager\.io/cluster-issuer"="letsencrypt-production"
      --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/ssl-redirect"="true"
      --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/http2-push-preload"="true"
      --set-string ingress.annotations."nginx\.ingress\.kubernetes\.io/proxy-body-size"="5M"
      --set ingress.hosts[0].host="*.lotta.schule"
      --set ingress.tls[0].hosts[0]="*.lotta.schule"
      --set ingress.tls[0].secretName="lotta-web-certificate"
      --set resources.limits.cpu=100m
      --set resources.limits.memory=32Mi
      --set resources.requests.cpu=75m
      --set resources.requests.memory=32Mi
    - curl "https://sentry.io/api/0/organizations/$SENTRY_ORGANIZATION_SLUG/releases/web-$CI_COMMIT_SHA/deploys/" -X POST -X POST -H 'Content-Type:application/json' -H "Authorization:Bearer $SENTRY_API_TOKEN" -d '{"environment":"production"}'
  only:
    refs:
      - master
