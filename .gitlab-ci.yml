stages:
  - test
  - build
  - deploy

variables:
  SAST_EXCLUDED_PATHS: "*.test.*, *.graphql"
  DOCKER_HUB_IMAGE: lotta/web

cache:
  key: "lotta-web-node-modules"
  paths:
    - node_modules/

test:
  stage: test
  image: node:16
  script:
    - npm install
    - npm run test:ci -- --coverage
  artifacts:
    when: always
    paths:
      - junit.xml
    reports:
      junit: junit.xml
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'

    # You can override the included template(s) by including variable overrides
    # SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
include:
  - template: Security/SAST.gitlab-ci.yml

semgrep-sast:
  cache: {}

lint:
  stage: test
  image: node:16
  script:
    - npm install
    - npm run lint -- --max-warnings=0

build docker image:staging:
  image: docker:20.10.9
  services:
    - docker:20.10.9-dind
  stage: build
  environment:
    name: staging
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

    - docker pull $CI_REGISTRY_IMAGE/deps:canary || true
    - docker pull $CI_REGISTRY_IMAGE/builder:canary || true
    - docker pull $CI_REGISTRY_IMAGE:canary || true

    - docker build
      --cache-from $CI_REGISTRY_IMAGE/deps:canary
      --target deps -t $CI_REGISTRY_IMAGE/deps:$CI_COMMIT_SHA .
    - docker build
      --cache-from $CI_REGISTRY_IMAGE/builder:canary
      --cache-from $CI_REGISTRY_IMAGE/deps:$CI_COMMIT_SHA
      --build-arg SENTRY_AUTH_TOKEN=$SENTRY_AUTH_TOKEN
      --target builder -t $CI_REGISTRY_IMAGE/builder:$CI_COMMIT_SHA .
    - docker build
      --cache-from $CI_REGISTRY_IMAGE:canary
      --cache-from $CI_REGISTRY_IMAGE/builder:$CI_COMMIT_SHA
      --cache-from $CI_REGISTRY_IMAGE/deps:$CI_COMMIT_SHA
      --build-arg SENTRY_AUTH_TOKEN=$SENTRY_AUTH_TOKEN
      --target runner -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .

    - docker push $CI_REGISTRY_IMAGE/deps:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE/builder:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - |
      if [ $CI_COMMIT_REF_NAME == "develop" ]; then
        echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USER --password-stdin
        docker tag $CI_REGISTRY_IMAGE/deps:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/deps:canary
        docker tag $CI_REGISTRY_IMAGE/builder:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/builder:canary
        docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:canary
        docker push $CI_REGISTRY_IMAGE:canary
        docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA lotta/web:canary
        docker push lotta/web:canary
      fi
  only:
    refs:
      - develop

build docker image:production:
  image: docker:20.10.9
  services:
    - docker:20.10.9-dind
  stage: build
  environment:
    name: production
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

    - docker pull $CI_REGISTRY_IMAGE/deps:stable || true
    - docker pull $CI_REGISTRY_IMAGE/builder:stable || true
    - docker pull $CI_REGISTRY_IMAGE:stable || true

    - docker build
      --cache-from $CI_REGISTRY_IMAGE/deps:stable
      --target deps -t $CI_REGISTRY_IMAGE/deps:stable .
    - docker build
      --cache-from $CI_REGISTRY_IMAGE/builder:stable
      --cache-from $CI_REGISTRY_IMAGE/deps:stable
      --build-arg SENTRY_AUTH_TOKEN=$SENTRY_AUTH_TOKEN
      --target builder -t $CI_REGISTRY_IMAGE/builder:stable .
    - docker build
      --cache-from $CI_REGISTRY_IMAGE:stable
      --cache-from $CI_REGISTRY_IMAGE/builder:stable
      --cache-from $CI_REGISTRY_IMAGE/deps:stable
      --build-arg SENTRY_AUTH_TOKEN=$SENTRY_AUTH_TOKEN
      --target runner -t $CI_REGISTRY_IMAGE:stable .

    - docker push $CI_REGISTRY_IMAGE/deps:stable
    - docker push $CI_REGISTRY_IMAGE/builder:stable
    - docker push $CI_REGISTRY_IMAGE:stable

    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USER" --password-stdin
    - docker tag $CI_REGISTRY_IMAGE:stable $DOCKER_HUB_IMAGE:latest
    - docker tag $CI_REGISTRY_IMAGE:stable $DOCKER_HUB_IMAGE:$CI_COMMIT_TAG
    - docker push $DOCKER_HUB_IMAGE:latest
    - docker push $DOCKER_HUB_IMAGE:stable
    - docker push $DOCKER_HUB_IMAGE:$CI_COMMIT_TAG
  only:
    - tags

deploy:staging:
  stage: deploy
  environment:
    name: staging
  image:
    name: lotta/ionos-helm-deploy:latest
  script:
  - /user/local/bin/setup.sh
  - curl -sL https://sentry.io/get-cli/ | bash
  - sentry-cli releases new $CI_COMMIT_SHA
  - helm repo add lotta $LOTTA_HELM_REPO_URL
  - helm repo update
  - helm upgrade --install lotta-web lotta/lotta-web
    --namespace lotta-staging
    --reuse-values
    --set image.repository=$CI_REGISTRY_IMAGE
    --set image.tag=$CI_COMMIT_SHA
    --set app.environment=staging
    --set api.url="http://lotta-core:4000"
    --set api.socketUrl="wss://core.staging.lotta.schule/api/user-socket"
    --set cloudimage.token=$CLOUDIMG_TOKEN
    --set sentry.dsn=$SENTRY_DSN
    --set imagePullSecrets[0].name=regcred
    --set ingress.hosts[0].name="*.staging.lotta.schule"
    --set ingress.hosts[0].tls=true
    --set ingress.hosts[0].tlsSecret="wildcard-staging-lotta-schule-tls"
  - sentry-cli releases finalize $CI_COMMIT_SHA
  - sentry-cli releases deploys $CI_COMMIT_SHA new -e staging
  only:
    refs:
      - develop

deploy:production:
  stage: deploy
  environment:
    name: production
  image:
    name: lotta/ionos-helm-deploy:latest
  script:
  - /user/local/bin/setup.sh
  - curl -sL https://sentry.io/get-cli/ | bash
  - sentry-cli releases new $CI_COMMIT_TAG
  - helm repo add lotta $LOTTA_HELM_REPO_URL
  - helm repo update
  - helm upgrade --install lotta-web lotta/lotta-web
    --namespace lotta
    --reuse-values
    --set autoscaling.enabled=true
    --set autoscaling.minReplicas=2
    --set autoscaling.maxReplicas=3
    --set image.tag=$CI_COMMIT_TAG
    --set app.environment=production
    --set api.url="http://lotta-core:4000"
    --set api.socketUrl="wss://core.lotta.schule/api/user-socket"
    --set cloudimage.token=$CLOUDIMG_TOKEN
    --set sentry.dsn=$SENTRY_DSN
    --set ingress.hosts[0].name="*.lotta.schule"
    --set ingress.hosts[0].tls=true
    --set ingress.hosts[0].tlsSecret="wildcard-lotta-schule-tls"
  - sentry-cli releases finalize $CI_COMMIT_SHA
  - sentry-cli releases deploys $CI_COMMIT_SHA new -e staging
  only:
    - tags
