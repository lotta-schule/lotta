stages:
  - test
  - build
  - deploy

variables:
  # set docker host to connect to docker in kubernetes
  # DOCKER_HOST: tcp://localhost:2375/
  # DOCKER_DRIVER: overlay2
  # TODO: Set correct certs dir to /certs according to this article: https://about.gitlab.com/2019/07/31/docker-in-docker-with-docker-19-dot-03/
  DOCKER_TLS_CERTDIR: "/certs"
  SAST_EXCLUDED_PATHS: "*.test.*, *.graphql"

cache:
  key: "lotta-web-node-modules"
  paths:
    - node_modules/

test:
  stage: test
  image: node:16
  script:
    - npm install
    - npm run test:ci -- --coverage
  artifacts:
    when: always
    paths:
      - junit.xml
    reports:
      junit: junit.xml
  coverage: '/All files[^|]*\|[^|]*\s+([\d\.]+)/'

# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
include:
  - template: Security/SAST.gitlab-ci.yml

semgrep-sast:
  cache: {}

lint:
  stage: test
  image: node:16
  script:
    - npm install
    - npm run lint -- --max-warnings=0

build docker image:
  image: docker:19.03.0
  services:
    - docker:19.03.0-dind
  stage: build
  environment:
    name: staging
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
      --build-arg SENTRY_AUTH_TOKEN=$SENTRY_AUTH_TOKEN .
    - docker push $CI_REGISTRY_IMAGE
    - |
      if [ $CI_COMMIT_REF_NAME == "develop" ]; then
        echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USER --password-stdin
        docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA lotta/web:canary
        docker push lotta/web:canary
      fi
      # only:
      #   refs:
      #     - develop

build docker image:production:
  image: docker:19.03.0
  services:
    - docker:19.03.0-dind
  stage: build
  environment:
    name: production
  script:
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_USER" --password-stdin
    - docker pull lotta/web:production
    - docker build -t lotta/web:$CI_COMMIT_TAG
      --build-arg APP_ENVIRONMENT=production
      --build-arg APP_REVISION=$CI_COMMIT_TAG
      --build-arg APP_BASE_DOMAIN
      --build-arg API_URL="/api"
      --build-arg AUTH_URL="/auth"
      --build-arg API_SOCKET_URL="/api/userAvatar-socket"
      --build-arg CLOUDIMG_TOKEN
      --build-arg SENTRY_DSN
      --build-arg MATOMO_URL
      --build-arg FILE_REPLACEMENT_URL .
    - docker tag lotta/web:$CI_COMMIT_TAG lotta/web:stable
    - docker tag lotta/web:$CI_COMMIT_TAG lotta/web:latest
    - docker push lotta/web
  only:
    - tags

deploy:staging:
  stage: deploy
  environment:
    name: production
  image:
    name: lotta/ionos-helm-deploy:latest
  script:
  - /userAvatar/local/bin/setup.sh
  - curl -sL https://sentry.io/get-cli/ | bash
  - sentry-cli releases new $CI_COMMIT_SHA
  - helm repo add lotta $LOTTA_HELM_REPO_URL
  - helm repo update
  - helm upgrade --install lotta-web lotta/lotta-web
    --namespace lotta-staging
    --set image.repository=$CI_REGISTRY_IMAGE
    --set image.tag=$CI_COMMIT_SHA
    --set app.environment=staging
    --set api.url="http://lotta-core:4000"
    --set api.socketUrl="wss://core.staging.lotta.schule/api/userAvatar-socket"
    --set cloudimage.token=$CLOUDIMG_TOKEN
    --set sentry.dsn=$SENTRY_DSN
    --set imagePullSecrets[0].name=regcred
    --set ingress.hosts[0].name="*.staging.lotta.schule"
    --set ingress.hosts[0].tls=true
    --set ingress.hosts[0].tlsSecret="wildcard-staging-lotta-schule-tls"
  - sentry-cli releases finalize $CI_COMMIT_SHA
  - sentry-cli releases deploys $CI_COMMIT_SHA new -e staging
  only:
    refs:
      - develop

deploy:production:
  stage: deploy
  environment:
    name: production
  image:
    name: lotta/ionos-helm-deploy:latest
  script:
  - /userAvatar/local/bin/setup.sh
  - curl "https://sentry.io/api/0/organizations/$SENTRY_ORGANIZATION_SLUG/releases/" -X POST -X POST -H "Authorization:Bearer $SENTRY_API_TOKEN" -H 'Content-Type:application/json' -d "{ \"version\":\"api-$CI_COMMIT_TAG\", \"refs\":[{ \"repository\":\"$CI_PROJECT_PATH\", \"commit\":\"$CI_COMMIT_SHA\", \"previousCommit\":\"$CI_COMMIT_BEFORE_SHA\" }], \"projects\":[\"web\"] }"
  - helm repo add lotta $LOTTA_HELM_REPO_URL
  - helm repo update
  - helm upgrade --install lotta-web lotta/lotta-web
    --namespace lotta
    --set image.tag=$CI_COMMIT_TAG
    --set ingress.hosts[0].name="*.lotta.schule"
    --set ingress.hosts[0].tls=true
    --set ingress.hosts[0].tlsSecret="wildcard-lotta-schule-tls"
  only:
    - tags
